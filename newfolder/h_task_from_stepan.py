# H. Задача від Степана

# Ім’я вхідного файлу:
# Ім’я вихідного файлу:
# Обмеження по часу:
# Обмеження по пам’яті:
# task.in task.out 0,5 секунда 128 мегабайт

# Перебираючи свої дитячі іграшки,
# Степан знайшов набір із N різних прямокутників і згадав задачу,
# яку йому колись задав старенький вчитель математики.
# Назвемо прямокутник маленьким, якщо знайдеться інший прямокутник з даного набору,
# яким можна повністю накрити цей прямокутник.
# При цьому прямокутники можна повертати, але відповідні сторони мають бути паралельними.
# Наприклад, прямокутник зі сторонами 1 і 10 можна повністю накрити прямокутником 10 і 3,
# але неможна накрити прямокутником зі сторонами 9 і 9.
# Прямокутники зі сторонами 10 і 3, а також зі сторонами 9 і 9 накрити неможна,
# відповідно в наборі із цих трьох прямокутників тільки один маленький.

# Напишіть програму, яка вирішить згадану Степаном задачу –
# визначить кількість маленьких прямокутників у даному наборі.

# Формат вхідних даних: перший рядок вхідного файлу містить одне ціле число N (2 ≤ N ≤ 200000).
# У кожному з наступних N рядків міститься два цілих додатних числа –
# розміри одного прямокутника. Усі розміри не перевищують 1000000.
# Серед даних прямокутників немає однакових.

# Формат вихідних даних: вихідний файл має містити одне ціле число -
# кількість маленьких прямокутників у даному наборі.

# Приклад вхідних та вихідних даних:
# task.in
# 3
# 1 10
# 9 9
# 10 3
# task.out
# 1
# task.in
# 4
# 1 7
# 2 6
# 3 5
# 4 4
# task.out
# 0

n = int(input())
a=[]
for i in range(n):
    a.append(list(map(int,input().split())))
for i in range(n):
    if a[i][0]>a[i][1]:
        a[i].sort()
a.sort(key=lambda x: x[0])
for i in range(n):
    a[i].append(i)
a.sort(key=lambda x: x[1])
b=[el[2] for el in a]

# s=set()
# for i in range(1,n)[::-1]:
#     for j in range(i):
#         if a[i][0]>=a[j][0] and a[i][1]>=a[j][1]:
#             s.add(j)
# b=[5,4,3,2,1,0]
# n=len(b)

s=0
sup=n-1

for i in range(n-1):
    if b[i]<sup:
        s+=1
    if b[i]==sup:
        sup-=1




print (a,b,s)
