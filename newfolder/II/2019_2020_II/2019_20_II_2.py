# B (70) Друзі
# UOI 2021-2022. II stage. Kyiv ?

# https://uoi.eolymp.space/uk/problems/70
# https://www.kievoi.ippo.kubg.edu.ua/kievoi/1-2/2021.pdf умова + розбір

# 100%

# Ліміт на час виконання 1 секунда
# Ліміт використання пам'яті 256 мегабайтів
# 50 спроб відправити цю задачу
# На координатній прямій розташовано ваш будинок, а також будинки трьох ваших друзів. Ваш
# будинок розташовано на координаті 0. А координати друзів на x1, x2 та x3 відповідно. Ви зараз
# перебуваєте у себе в будинку, ви хочете відвідати кожного друга, а потім повернутися до себе у
# будинок. Ви можете відвідувати друзів у будь-якому порядку. Знайдіть мінімальний шлях, який вам
# потрібно пройти, щоб це зробити.
# Вхідні дані
# Перший рядок містить три цілі числа x1, x2, x3 (−100 ≤ x1, x2, x3 ≤ 100). Зверніть увагу, що на одній й
# тій самій координаті може бути кілька будинків. Також, будинки друзів можуть бути на координаті 0.
# Вихідні дані
# Виведіть одне ціле число — відповідь на задачу.
# Примітка
# У першому прикладі ви можете спочатку відвідати другого друга, для цього вам потрібно
# переміститися з 0 на координату −3. Потім можете відвідати першого друга — переміститися з
# координати −3 у 5. Потім до третього друга — на 7, а потім назад до координати 0.
# ∣0 − (−3)∣ + ∣(−3) − 5∣ + ∣5 − 7∣ + ∣7 − 0∣ = 3 + 8 + 2 + 7 = 20.
# Приклади
# Нижче ви знайдете приклади вхідних даних та відповідей, які має вивести ваша програма.
# Вхідні дані №1
# 5 -3 7
# Відповідь №1
# 20
# Вхідні дані №2
# -5 -9 -3
# Відповідь №2
# 18
# Вхідні дані №3
# 0 0 0
# Відповідь №3
# 0

x1, x2, x3 = map(int, input().split())

def dist(x1,x2,x3):
    if x1*x2>=0:
        c_=max(abs(x1),(x2))
        if x1*x3>=0:
            if abs(x3)>c_:
                return abs(x3)
            else:
                return c_
        else:
            return c_+abs(x3)
    else:
        return 0

c = dist(x1,x2,x3)
c_new = dist(x1,x3,x2)
if c_new>c:
    c=c_new
c_new = dist(x2,x3,x1)
if c_new>c:
    c= c_new

# todo
print(2*c)